{"version":3,"sources":["webpack:///./src/components/vintage-quote.js","webpack:///./src/pages/guides/montreal.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/default-layout.js","webpack:///./src/components/seo.js"],"names":["VintageQuote","_ref","author","children","react_default","a","createElement","className","styles","vintage_quote","propTypes","PropTypes","string","defaultProps","photoGraph","Montreal","default_layout","seo","title","gatsby_browser_entry","query","render","data","lib_default","gutterWidth","columnWidth","Object","keys","map","key","gatsby_image_default","fixed","childImageSharp","_866523859","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","object","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","assign","json","shape","Header","siteTitle","id","to","src","alt","node","DefaultLayout","showHeader","Fragment","header","site","siteMetadata","style","margin","maxWidth","padding","paddingTop","_856328897","bool","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","arrayOf"],"mappings":"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","file":"component---src-pages-guides-montreal-js-496acdac71e2af890ec5.js","sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport styles from \"./styles/vintage-quote.module.css\"\n\nconst VintageQuote = ({ author, children }) => (\n   <div className={ styles.vintage_quote }>\n      <p>{ children }</p>\n      <p>{ author }</p>\n   </div>\n)\n\nVintageQuote.propTypes = {\n  author:  PropTypes.string\n}\n\nVintageQuote.defaultProps = {\n  author: ``\n}\n\n\nexport default VintageQuote\n","import React from \"react\"\nimport StackGrid from \"react-stack-grid\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport DefaultLayout from \"../../components/default-layout\"\nimport SEO from \"../../components/seo\"\nimport VintageQuote from '../../components/vintage-quote'\n\nconst Montreal = () => (\n  <DefaultLayout className=\"article\">\n   <SEO title=\"Montréal\" />\n   <h1>Montréal</h1>\n   <VintageQuote author=\"Centre d'histoire de Montréal\">\n   ‟Montreal is a living, dynamic entity, born from the encounter between a territory and a diversity of peoples. Like every city, it is in constant flux — never complete, always in the process of becoming. It bears the traces of those who came before: physical traces, reflected in the architecture and landscapes of its neighborhoods, and intangible traces, cast in lifestyles, languages and mentalities.”\n   </VintageQuote>\n   <h3>History</h3>\n   <h3>Photo's</h3>\n   <StaticQuery\n     query={photoGraph}\n     render={data => (\n       <StackGrid gutterWidth={15} columnWidth={250}>\n       { Object.keys(data).map((key) => {\n         return <Img key={key} fixed={data[key].childImageSharp.fixed} />\n       })\n      }\n       </StackGrid>\n     )}\n   />\n  </DefaultLayout>\n)\n\nexport default Montreal\n\nconst photoGraph = graphql`\nfragment GridPhotoItem on File {\n  childImageSharp {\n    fixed(width: 250) {\n      ...GatsbyImageSharpFixed\n    }\n  }\n}\n\nquery {\n  img1: file(relativePath: {eq: \"montreal/mtl_img_1.JPG\"}) {\n    ...GridPhotoItem\n  }\n  img2: file(relativePath: {eq: \"montreal/mtl_img_2.jpg\"}) {\n    ...GridPhotoItem\n  }\n  img3: file(relativePath: {eq: \"montreal/mtl_img_3.jpg\"}) {\n    ...GridPhotoItem\n  }\n  img4: file(relativePath: {eq: \"montreal/mtl_img_4.jpg\"}) {\n    ...GridPhotoItem\n  }\n  img5: file(relativePath: {eq: \"montreal/mtl_img_5.jpg\"}) {\n    ...GridPhotoItem\n  }\n  img6: file(relativePath: {eq: \"montreal/mtl_img_6.JPG\"}) {\n    ...GridPhotoItem\n  }\n  img7: file(relativePath: {eq: \"montreal/mtl_img_7.jpg\"}) {\n    ...GridPhotoItem\n  }\n}`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header>\n   <div id=\"header-content\">\n      <Link to=\"/\" id=\"home-icon\">\n         <img src={'/home-icon.svg'} alt=\"Home Icon\" id=\"home-icon\"/>\n      </Link>\n      <div id=\"header-title\"><p>{siteTitle}</p></div>\n   </div>\n  </header>\n)\n\nHeader.propTypes = {\n  children: PropTypes.node,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n\nconst DefaultLayout = ({ children, className, showHeader }) => (\n  <StaticQuery\n  query={graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `}\n  render={ data => (\n    <>\n      { showHeader && <Header siteTitle={ data.site.siteMetadata.title } /> }\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n       }} className={ className }>\n        <main>{ children }</main>\n      </div>\n    </>\n  )}\n/>\n)\n\nDefaultLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  showHeader: PropTypes.bool\n}\n\nDefaultLayout.defaultProps = {\n   children: <div></div>,\n   className: '',\n   showHeader: true\n}\n\nexport default DefaultLayout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}